/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import Controller.Secure;
import Model.User;
import java.awt.Color;
import javax.swing.JOptionPane;
/**
 *
 * @author Admin
 */
public class ForgetPword extends javax.swing.JPanel {

    /**
     * Creates new form ForgetPword
     */
    
    public Frame frame;
    public Secure secure;    
    public User user;
    
    public ForgetPword() {
        initComponents();
    }
    
//    private void forgetpwordBtnActionPerformed(java.awt.event.ActionEvent evt) {                                            
//        usernameFld.setText("");
//        passwordFld.setText("");
//        frame.registerNav();
//    }     

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        resetpwordBtn = new javax.swing.JButton();
        passwordFld = new javax.swing.JPasswordField();
        confpassFld = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        lbl_length = new javax.swing.JLabel();
        lbl_number = new javax.swing.JLabel();
        lbl_specialChar = new javax.swing.JLabel();
        lbl_uppercase = new javax.swing.JLabel();
        lbl_lowercase = new javax.swing.JLabel();
        lbl_whiteSpace = new javax.swing.JLabel();

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backBtn.setText("<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SECURITY Scvs");

        resetpwordBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        resetpwordBtn.setText("RESET PASSWORD");
        resetpwordBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetpwordBtnActionPerformed(evt);
            }
        });

        passwordFld.setBackground(new java.awt.Color(240, 240, 240));
        passwordFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "PASSWORD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        passwordFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFldActionPerformed(evt);
            }
        });
        passwordFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFldKeyReleased(evt);
            }
        });

        confpassFld.setBackground(new java.awt.Color(240, 240, 240));
        confpassFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confpassFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confpassFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "CONFIRM PASSWORD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PASSWORD REQUIREMENTS");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_length.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_length.setText("At least 12 characters");

        lbl_number.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_number.setText("At least one numeric character [0-9]");

        lbl_specialChar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_specialChar.setText("At least one special character (i.e. !@#$)");

        lbl_uppercase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_uppercase.setText("At least one uppercase letter [A-Z]");

        lbl_lowercase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_lowercase.setText("At least one lowercase letter [a-z]");

        lbl_whiteSpace.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_whiteSpace.setText("Must not contain white spaces");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_uppercase, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(lbl_lowercase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_length, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_specialChar, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                            .addComponent(lbl_number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbl_whiteSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordFld)
                    .addComponent(confpassFld)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(130, 130, 130))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(resetpwordBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(191, 191, 191))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(33, 33, 33)
                .addComponent(passwordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(confpassFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_length, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_uppercase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_specialChar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_lowercase)
                    .addComponent(lbl_whiteSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addComponent(resetpwordBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFldKeyReleased
        checkString(passwordFld.getText());
    }//GEN-LAST:event_passwordFldKeyReleased

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        passwordFld.setText("");
        confpassFld.setText("");
        frame.loginNav();
    }//GEN-LAST:event_backBtnActionPerformed

    private void resetpwordBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetpwordBtnActionPerformed
        boolean resetFlag = false;
        
        if(passwordFld.getText().isEmpty() || confpassFld.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Error: one or more fields are empty", "Error: Forget Password", JOptionPane.ERROR_MESSAGE);
        }
        else if(!frame.secure.chkIfSame(passwordFld.getText(), confpassFld.getText())){
            JOptionPane.showMessageDialog(null, "Error: password and confirm password are not the same", "Error: Forget Password", JOptionPane.ERROR_MESSAGE);
        }
        else if (!checkString(passwordFld.getText())){
            JOptionPane.showMessageDialog(null, "Error: password does not meet requirements", "Error: Forget Password", JOptionPane.ERROR_MESSAGE);
        }
        else{
            frame.updateUser(user.getUsername(), passwordFld.getText(), user.getRole(), user.getLocked(), user.getSecQuestion(), user.getSecAnswer(), user.getFailLog());
            frame.main.sqlite.addLogs("PASSWORD UPDATE SUCCESS", user.getUsername(), "Reset password successful", null);
            passwordFld.setText("");
            confpassFld.setText("");
            JOptionPane.showMessageDialog(null, "Password changed successfully!");
            frame.loginNav();
            resetFlag = true;
        }
        
        if(!resetFlag){
            frame.main.sqlite.addLogs("PASSWORD UPDATE FAIL", user.getUsername(), "Reset password Failure", null);
        }
    }//GEN-LAST:event_resetpwordBtnActionPerformed

    private void passwordFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFldActionPerformed

    private boolean checkString(String str) {
    char ch;
    boolean upperCaseFlag = false;
    boolean lowerCaseFlag = false;
    boolean numberFlag = false;
    boolean lengthFlag = false;
    boolean specialFlag = false;
    boolean whiteSpaceFlag = false;
    
    String specialCharactersString = "!@#$%&*()'+,-./:;<=>?[]^_`{|}";
    
    if(str.length() >= 12){
        lengthFlag = true;
        lbl_length.setForeground(Color.green.darker());
    }
    for(int i=0;i < str.length();i++) {
        ch = str.charAt(i);
        if(Character.isWhitespace(ch)){
            whiteSpaceFlag = true;
            lbl_whiteSpace.setForeground(Color.red);
        }
        if(Character.isDigit(ch)) {
            numberFlag = true;
            lbl_number.setForeground(Color.green.darker());
        }
        if (Character.isUpperCase(ch)) {
            upperCaseFlag = true;
            lbl_uppercase.setForeground(Color.green.darker());
        } 
        if (Character.isLowerCase(ch)) {
            lowerCaseFlag = true;
            lbl_lowercase.setForeground(Color.green.darker());
        } 
        
        if(specialCharactersString.contains(Character.toString(ch))) {
            specialFlag = true;
            lbl_specialChar.setForeground(Color.green.darker());
        }
    }
    
    if(!whiteSpaceFlag)
        lbl_whiteSpace.setForeground(Color.green.darker());
    
    if(!numberFlag)
            lbl_number.setForeground(Color.red);
        
    if(!upperCaseFlag)
        lbl_uppercase.setForeground(Color.red);

    if(!lowerCaseFlag)
        lbl_lowercase.setForeground(Color.red);

    if(!lengthFlag)
        lbl_length.setForeground(Color.red);
    
    if(!specialFlag)
        lbl_specialChar.setForeground(Color.red);
    
    if(numberFlag && upperCaseFlag && lowerCaseFlag && lengthFlag && specialFlag)
        return true;
    else
        return false;
}
     
     public void getUser(User user){
        this.user = user;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField confpassFld;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbl_length;
    private javax.swing.JLabel lbl_lowercase;
    private javax.swing.JLabel lbl_number;
    private javax.swing.JLabel lbl_specialChar;
    private javax.swing.JLabel lbl_uppercase;
    private javax.swing.JLabel lbl_whiteSpace;
    private javax.swing.JTextField passwordFld;
    private javax.swing.JButton resetpwordBtn;
    // End of variables declaration//GEN-END:variables
}
